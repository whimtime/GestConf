package com.gestioneconferenzews.DAO.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CodaFatturazioneExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	public CodaFatturazioneExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andCdCodaFatturazioneIsNull() {
			addCriterion("cd_coda_fatturazione is null");
			return (Criteria) this;
		}

		public Criteria andCdCodaFatturazioneIsNotNull() {
			addCriterion("cd_coda_fatturazione is not null");
			return (Criteria) this;
		}

		public Criteria andCdCodaFatturazioneEqualTo(Integer value) {
			addCriterion("cd_coda_fatturazione =", value, "cdCodaFatturazione");
			return (Criteria) this;
		}

		public Criteria andCdCodaFatturazioneNotEqualTo(Integer value) {
			addCriterion("cd_coda_fatturazione <>", value, "cdCodaFatturazione");
			return (Criteria) this;
		}

		public Criteria andCdCodaFatturazioneGreaterThan(Integer value) {
			addCriterion("cd_coda_fatturazione >", value, "cdCodaFatturazione");
			return (Criteria) this;
		}

		public Criteria andCdCodaFatturazioneGreaterThanOrEqualTo(Integer value) {
			addCriterion("cd_coda_fatturazione >=", value, "cdCodaFatturazione");
			return (Criteria) this;
		}

		public Criteria andCdCodaFatturazioneLessThan(Integer value) {
			addCriterion("cd_coda_fatturazione <", value, "cdCodaFatturazione");
			return (Criteria) this;
		}

		public Criteria andCdCodaFatturazioneLessThanOrEqualTo(Integer value) {
			addCriterion("cd_coda_fatturazione <=", value, "cdCodaFatturazione");
			return (Criteria) this;
		}

		public Criteria andCdCodaFatturazioneIn(List<Integer> values) {
			addCriterion("cd_coda_fatturazione in", values,
					"cdCodaFatturazione");
			return (Criteria) this;
		}

		public Criteria andCdCodaFatturazioneNotIn(List<Integer> values) {
			addCriterion("cd_coda_fatturazione not in", values,
					"cdCodaFatturazione");
			return (Criteria) this;
		}

		public Criteria andCdCodaFatturazioneBetween(Integer value1,
				Integer value2) {
			addCriterion("cd_coda_fatturazione between", value1, value2,
					"cdCodaFatturazione");
			return (Criteria) this;
		}

		public Criteria andCdCodaFatturazioneNotBetween(Integer value1,
				Integer value2) {
			addCriterion("cd_coda_fatturazione not between", value1, value2,
					"cdCodaFatturazione");
			return (Criteria) this;
		}

		public Criteria andCdPersonaIsNull() {
			addCriterion("cd_persona is null");
			return (Criteria) this;
		}

		public Criteria andCdPersonaIsNotNull() {
			addCriterion("cd_persona is not null");
			return (Criteria) this;
		}

		public Criteria andCdPersonaEqualTo(Integer value) {
			addCriterion("cd_persona =", value, "cdPersona");
			return (Criteria) this;
		}

		public Criteria andCdPersonaNotEqualTo(Integer value) {
			addCriterion("cd_persona <>", value, "cdPersona");
			return (Criteria) this;
		}

		public Criteria andCdPersonaGreaterThan(Integer value) {
			addCriterion("cd_persona >", value, "cdPersona");
			return (Criteria) this;
		}

		public Criteria andCdPersonaGreaterThanOrEqualTo(Integer value) {
			addCriterion("cd_persona >=", value, "cdPersona");
			return (Criteria) this;
		}

		public Criteria andCdPersonaLessThan(Integer value) {
			addCriterion("cd_persona <", value, "cdPersona");
			return (Criteria) this;
		}

		public Criteria andCdPersonaLessThanOrEqualTo(Integer value) {
			addCriterion("cd_persona <=", value, "cdPersona");
			return (Criteria) this;
		}

		public Criteria andCdPersonaIn(List<Integer> values) {
			addCriterion("cd_persona in", values, "cdPersona");
			return (Criteria) this;
		}

		public Criteria andCdPersonaNotIn(List<Integer> values) {
			addCriterion("cd_persona not in", values, "cdPersona");
			return (Criteria) this;
		}

		public Criteria andCdPersonaBetween(Integer value1, Integer value2) {
			addCriterion("cd_persona between", value1, value2, "cdPersona");
			return (Criteria) this;
		}

		public Criteria andCdPersonaNotBetween(Integer value1, Integer value2) {
			addCriterion("cd_persona not between", value1, value2, "cdPersona");
			return (Criteria) this;
		}

		public Criteria andCdPagamentoIsNull() {
			addCriterion("cd_pagamento is null");
			return (Criteria) this;
		}

		public Criteria andCdPagamentoIsNotNull() {
			addCriterion("cd_pagamento is not null");
			return (Criteria) this;
		}

		public Criteria andCdPagamentoEqualTo(Integer value) {
			addCriterion("cd_pagamento =", value, "cdPagamento");
			return (Criteria) this;
		}

		public Criteria andCdPagamentoNotEqualTo(Integer value) {
			addCriterion("cd_pagamento <>", value, "cdPagamento");
			return (Criteria) this;
		}

		public Criteria andCdPagamentoGreaterThan(Integer value) {
			addCriterion("cd_pagamento >", value, "cdPagamento");
			return (Criteria) this;
		}

		public Criteria andCdPagamentoGreaterThanOrEqualTo(Integer value) {
			addCriterion("cd_pagamento >=", value, "cdPagamento");
			return (Criteria) this;
		}

		public Criteria andCdPagamentoLessThan(Integer value) {
			addCriterion("cd_pagamento <", value, "cdPagamento");
			return (Criteria) this;
		}

		public Criteria andCdPagamentoLessThanOrEqualTo(Integer value) {
			addCriterion("cd_pagamento <=", value, "cdPagamento");
			return (Criteria) this;
		}

		public Criteria andCdPagamentoIn(List<Integer> values) {
			addCriterion("cd_pagamento in", values, "cdPagamento");
			return (Criteria) this;
		}

		public Criteria andCdPagamentoNotIn(List<Integer> values) {
			addCriterion("cd_pagamento not in", values, "cdPagamento");
			return (Criteria) this;
		}

		public Criteria andCdPagamentoBetween(Integer value1, Integer value2) {
			addCriterion("cd_pagamento between", value1, value2, "cdPagamento");
			return (Criteria) this;
		}

		public Criteria andCdPagamentoNotBetween(Integer value1, Integer value2) {
			addCriterion("cd_pagamento not between", value1, value2,
					"cdPagamento");
			return (Criteria) this;
		}

		public Criteria andDataElaborazioneIsNull() {
			addCriterion("data_elaborazione is null");
			return (Criteria) this;
		}

		public Criteria andDataElaborazioneIsNotNull() {
			addCriterion("data_elaborazione is not null");
			return (Criteria) this;
		}

		public Criteria andDataElaborazioneEqualTo(Date value) {
			addCriterionForJDBCDate("data_elaborazione =", value,
					"dataElaborazione");
			return (Criteria) this;
		}

		public Criteria andDataElaborazioneNotEqualTo(Date value) {
			addCriterionForJDBCDate("data_elaborazione <>", value,
					"dataElaborazione");
			return (Criteria) this;
		}

		public Criteria andDataElaborazioneGreaterThan(Date value) {
			addCriterionForJDBCDate("data_elaborazione >", value,
					"dataElaborazione");
			return (Criteria) this;
		}

		public Criteria andDataElaborazioneGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_elaborazione >=", value,
					"dataElaborazione");
			return (Criteria) this;
		}

		public Criteria andDataElaborazioneLessThan(Date value) {
			addCriterionForJDBCDate("data_elaborazione <", value,
					"dataElaborazione");
			return (Criteria) this;
		}

		public Criteria andDataElaborazioneLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("data_elaborazione <=", value,
					"dataElaborazione");
			return (Criteria) this;
		}

		public Criteria andDataElaborazioneIn(List<Date> values) {
			addCriterionForJDBCDate("data_elaborazione in", values,
					"dataElaborazione");
			return (Criteria) this;
		}

		public Criteria andDataElaborazioneNotIn(List<Date> values) {
			addCriterionForJDBCDate("data_elaborazione not in", values,
					"dataElaborazione");
			return (Criteria) this;
		}

		public Criteria andDataElaborazioneBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_elaborazione between", value1,
					value2, "dataElaborazione");
			return (Criteria) this;
		}

		public Criteria andDataElaborazioneNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("data_elaborazione not between", value1,
					value2, "dataElaborazione");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table coda_fatturazione
	 * @mbggenerated  Fri Apr 25 11:55:32 CEST 2014
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table coda_fatturazione
     *
     * @mbggenerated do_not_delete_during_merge Tue Apr 15 21:14:28 CEST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}